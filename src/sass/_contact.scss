@use 'abstracts' as *;

// Use method=POST to avoid method=dialog conflict
// NOTE: Method value is case-sensitive even if using 'i' flag
[method='POST'] {
  max-width: 640px;
  margin: 2rem auto;

  fieldset {
    border: 0;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas:
      'first_name'
      'last_name'
      'email'
      'message';
    margin: .5rem auto;

    @media screen and (min-width: $break-point-md) {
      gap: 1rem;
      grid-template-columns: 1fr 1fr;
      grid-template-areas:
        'first_name last_name'
        'email email'
        'message message';
    }
  }
}

[type='submit'] {
  display: grid;
  gap: .75rem;
  grid-template-columns: 24px 1fr;
  padding: .5rem 1.125rem;
  place-items: center;

  svg {
    fill: currentColor;

    &:last-of-type {
      display: none;
    }
  }

  span {
    margin-bottom: -2px;
  }

  &:hover {
    font-style: italic;

    svg {
      &:first-of-type {
        display: none;
      }

      &:last-of-type {
        display: block;
        transform: skewX(-10deg);
      }
    }
  }
}

legend {
  display: none;
}

label {
  display: block;
}

input,
textarea {
  background-color: var(--color-fg-bg, #0000);
  border-radius: var(--border-radius-sm, 0);
  border: 1px solid var(--color-fg-text, #0000);
  color: $color-black;
  font-family: var(--font-family, 'Comic Sans MS');
  font-size: 1rem;
  margin-bottom: 1rem;
  padding: .5rem;
  width: 100%;

  &:focus {
    outline: 2px solid var(--color-body-text, #0000);
    outline-offset: -1px;
  }

  :root.dark & {
    color: var(--color-fg-text, #0000);
  }
}

.first-name {
  grid-area: first_name;
}

.last-name {
  grid-area: last_name;
}

.email {
  grid-area: email;
}

.message {
  grid-area: message;
}
